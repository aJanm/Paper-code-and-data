www: 在该文件中执行脚本，并将执行结果作为模块载入。
分为两个部分，一在服务器端实现websocket，二在客户端实现websocket
客户端websocket介绍: 传统的服务器与客户端间进行通信往往采用轮询方式，客户端定时向服务器发送Ajax请求，
服务器收到请求后进行数据传送，这种轮询方式容易浪费服务器的大量带宽。
WebSocket是HTML5新增的协议，工作在应用层，用来解决客户端与服务器端的实时通信问题，它必须依赖于HTTP
协议进行一次握手，并在服务器和客户端之间建立一条双向信息通道。在握手成功之后，数据直接通过TCP协议进行
传播。
在客户端创建WebSocket的步骤如下所示。
1.当浏览器打开网页“http://localhost:3000/realtime”时，该网页执行index.js文件，里面的js代码包含WebSocket的全部功能，
js代码解析当前的地址栏地址以创建websocket连接，在创建成功后回调onopen()函数，在该函数中写入相关提示代码提示用户连接创建成功
2. 连接创建成功后，js代码中的onmessage()函数时刻监听服务器的动作，查看服务器是否发送了数据。
3.当服务器发送第一条数据并被onmessage()函数捕获后，代码中的逻辑将第一条数据作为设备名称，浏览器端js代码在页面上接收实时数据，并使用Echart技术以可视化形式显示脐橙生长环境数据
	2.给开关按钮添加POST请求代码

webSkt.js: 在里面使用ws模块实现websocket
public/javascripts/index.js
	https://www.cnblogs.com/llljpf/p/10830651.html
	

1.  js前端向后端传值时，使用name属性，在页面显示相应的值时使用value属性，举例：
    <li>工作日期:<input type="date" name="workdate" id="" value="2021-04-04" size="25px"/></li>
2. // 设置元素同一行的方法，一：使用浮动，二、使用display=inline



3.  netstat -tunp | grep 3000

查询结果：tcp6       0      0 10.1.1.4:3000           111.79.245.241:53543    ESTABLISHED       2909/node

然后 kill 2909

查看当前时间和时区。使用命令：date
例如,查询结果：Tue Apr  6 17:10:43 UTC 2021
CST：中国标准时间（China Standard Time）， UTC：协调世界时，又称世界标准时间，简称UTC，
GMT：格林尼治标准时间（旧译格林威治平均时间或格林威治标准时间；英语：
Greenwich Mean Time，GMT）是指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，
因为本初子午线被定义在通过那里的经线。
CDT<美>中央时区，-0500表示西五区。我们国家，CST，东八区（+0800）

修改时区：tzselect 
该命令告诉我们该如何写时区的格式
Please identify a location so that time zone rules can be set correctly.
Please select a continent or ocean.
 1) Africa
 2) Americas
 3) Antarctica
 4) Arctic Ocean
 5) Asia
 6) Atlantic Ocean
 7) Australia
 8) Europe
 9) Indian Ocean
10) Pacific Ocean
11) none - I want to specify the time zone using the Posix TZ format.



或者参考链接
https://www.cnblogs.com/sxdcgaq8080/p/11155232.html
1. date
2. timedatectl set-timezone Asia/Shanghai



4. 注意parseFloat()和parseInt()函数的使用，他们并不是string类的一个成员函数，使用方法如下所示：
	var dataArr0 = parseFloat(dataArr[0]);//正确使用方法
	// var dataArr0 = dataArr[0].parseFloat();//错误使用方法



5. 使用hbuilder引入js文件时，如果是自动提示，则会引入<script src="/public/javascripts/historyDataVision.js"></script>   
6. js中貌似不能有data[i+1]的表达
7.后端向前端传值的方法
	1 websocket,举例：users.js中的history的post请求，使用webSkt.sendMessage(strJson);
	然后再historyDataVisuation.js中使用onmessage进行接收

	2 使用res.render('history',strJson);进行界面的渲染，然后再前端中使用类似jsp的方法进行值的接收
		2-1注意在该方法中，在路由中，使用get()方法获取时
		router.get('/login',function(req,res,next){
  			res.render('login',{account:'',password:''});
		});
		要把{account:'',password:''}传过去，即刚开始把他们的值设为空，
		否则当我们访问“http://localhost:3000/login”
		时，会出现 <p class="title">最高:</p> account is not defined

		2-2点击按钮，触发方法，使用post方式接收值时，就可以把真正后端的值
		传给前端界面
		

	3 使用ajax进行局部刷新
		后端使用res.send(data)发送出去，前端引入jQuery，进行接收	
8. mongodb查询返回部分键值
	映射(projection )声明用来限制所有查询匹配文档的返回字段。projection以文档的形式列举结果集中要包含或者排除的字段。
	可以指定要包含的字段（例如： ｛field:1｝）或者指定要排除的字段（例如：｛field：0｝）。默认_id是包含在结果集合中的，
	要从结果集中排除_id字段，需要在 projection中指定排除_id字段（｛_id:0｝）。除了_id字段，不能在一个projection中联合使用包含和排除语意。

9. 如何在一个js文件中引入另外一个js文件
10. 注意不要在前端的js文件中使用过require，否则，“Uncaught ReferenceError: require is not defined”
因为浏览器端不能识别require关键字，require是node.js环境下的，
在node_modules文件夹里面的模块下面常见require，
	参考链接：https://blog.csdn.net/wml00000/article/details/84181227
	正确的方法是在后端使用require加载模块，然后将加载结果传送到前端，
	前端只负责数据的接收与显示
	或者前端自己再写一个类似功能的js文件，然后将其引入

11.对node.js中render和send的用法
	1. 多数情况下，渲染内容用res.render()，将会根据views中的模板文件进行渲染。如果不想使用views文件夹，
	想自己设置文件夹名字，那么app.set("views","aaaa");
	2. 

12. ajax的学习
	AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。AJAX = 异步 JavaScript 和 XML。
	在 2005 年，Google 通过其 Google Suggest 使 AJAX 变得流行起来。
	AJAX原理讲解
	XMLHttpRequest 是 AJAX 的基础。所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。
	XMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。

13. 
netstat -aon|findstr "3000"
taskkill /pid 端口号 -t -f
	